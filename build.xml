<?xml version="1.0" encoding="utf-8"?>

<project basedir="." default="jar" name="jvyamlb">
  <description>
    	JvYAMLb is a Java YAML 1.1 parser and emitter.
  </description>

  <!-- First try to load machine-specific properties. -->
  <property file="build.properties"/>
  
  <!-- And then load the defaults. It seems backwards to set defaults AFTER 
       setting local overrides, but that's how Ant works. -->
  <property file="default.build.properties"/>

  <property file="version.properties"/>

  <taskdef resource="tasks.properties">
    <classpath>
      <fileset dir="${lib.dir}" includes="**/*.jar" excludes="jvyamlb*.jar"/>
    </classpath>
  </taskdef>
  
  <path id="build.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar" excludes="jvyamlb*.jar"/>
  </path>

  <path id="test.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar" excludes="jvyamlb*.jar"/>
    <pathelement path="${jvyamlb.classes.dir}"/>
    <pathelement path="${test.classes.dir}"/>
  </path>

  <patternset id="java.src.pattern">
    <include name="**/*.java"/>
  </patternset>

  <target name="gen-pom" description="Creates new pom.xml files based on the current version configuration. This should be run before doing any Maven stuff">
    <filter token="VERSION_NUMBER" value="${VERSION_NUMBER}"/>
    <filter token="VERSION_ADDITION" value="${VERSION_ADDITION}"/>

    <copy file="pom.xml.template" tofile="pom.xml" filtering="true" overwrite="true"/>
    <copy file="MANIFEST.MF.template" tofile="MANIFEST.MF" filtering="true" overwrite="true"/>
  </target>

  <target name="prepare" description="Creates the directories needed for building">
    <xmlproperty file="build-config.xml" keepRoot="false" collapseAttributes="true"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${jvyamlb.classes.dir}"/>
    <mkdir dir="${test.results.dir}"/>
    <mkdir dir="${html.test.results.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
    <mkdir dir="${coverage.dir}"/>
  </target>
  
  <target name="compile" depends="prepare" description="Compile the source files for the project.">
    <javac destdir="${jvyamlb.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <src path="${main.src.dir}"/>
      <patternset refid="java.src.pattern"/>
    </javac>
  </target>

  <target name="compile-tests" depends="compile" description="Compile the test source files for the project.">
    <javac destdir="${test.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <classpath>
        <pathelement location="${jvyamlb.classes.dir}"/>
      </classpath>
      <src path="${test.src.dir}"/>
    </javac>
  </target>

  <target name="ci-compile-tests" depends="prepare" description="Compile the test source files for the project.">
    <javac destdir="${test.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <classpath>
        <pathelement location="${jvyamlb.classes.dir}"/>
      </classpath>
      <src path="${test.src.dir}"/>
    </javac>
  </target>

  <target name="coverage.instrument" depends="compile" description="">
    <cobertura-instrument todir="${coverage.classes.dir}">
      <fileset dir="${jvyamlb.classes.dir}"/>
    </cobertura-instrument>
  </target>

  <target name="ci-coverage.instrument" depends="prepare" description="">
    <cobertura-instrument todir="${coverage.classes.dir}">
      <fileset dir="${jvyamlb.classes.dir}"/>
    </cobertura-instrument>
  </target>

  <target name="test" depends="compile-tests" description="Runs all tests">
    <junit>
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false"/>
      <batchtest>
        <fileset dir="${test.src.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="ci-test" depends="ci-compile-tests" description="Runs all tests">
    <junit failureproperty="junit.failure">
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false" />
      <formatter type="xml"/>
      <batchtest todir="${test.results.dir}">
        <fileset dir="${test.src.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${test.results.dir}" tofile="../TESTS-TestSuites.xml">
      <fileset dir="${test.results.dir}" includes="TEST-*.xml"/>
      <report format="frames" todir="${html.test.results.dir}"/>
    </junitreport>
    <fail if="junit.failure" message="Test(s) failed."/>
  </target>

  <target name="coverage" depends="coverage.instrument" description="Runs all ISpec tests using Cobertura and produces a report">
    <junit fork="true" failureproperty="junit.failure">
      <classpath path="${coverage.classes.dir}"/>
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false" />
      <batchtest fork="yes" todir="${test.results.dir}">
        <fileset dir="${test.src.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
    <fail if="junit.failure" message="Test(s) failed."/>

    <cobertura-report srcdir="${main.src.dir}" destdir="${coverage.report.dir}"/>
  </target>

  <target name="ci-coverage" depends="ci-coverage.instrument" description="Runs all ISpec tests using Cobertura and produces a report">
    <junit fork="true" failureproperty="junit.failure">
      <classpath path="${coverage.classes.dir}"/>
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false" />
      <batchtest fork="yes" todir="${test.results.dir}">
        <fileset dir="${test.src.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
    <fail if="junit.failure" message="Test(s) failed."/>

    <cobertura-report srcdir="${main.src.dir}" destdir="${coverage.report.dir}"/>
  </target>

  <target name="jar" depends="test" description="Create the jvyaml.jar file">
    <jar destfile="${lib.dir}/jvyamlb-${VERSION_NUMBER}${VERSION_ADDITION}.jar">
      <fileset dir="${jvyamlb.classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>

  <target name="ci-jar" depends="prepare" description="Create the jvyaml.jar file">
    <jar destfile="${lib.dir}/jvyamlb-${VERSION_NUMBER}${VERSION_ADDITION}.jar">
      <fileset dir="${jvyamlb.classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>
	
  <target name="dist-bin" depends="jar">
    <tar destfile="${release.dir}/jvyamlb-bin-${VERSION_NUMBER}${VERSION_ADDITION}.tar.gz" compression="gzip">
      <tarfileset dir="." prefix="jvyamlb-${VERSION_NUMBER}${VERSION_ADDITION}">
        <include name="lib/**"/>
        <exclude name="lib/build/**"/>
        <include name="docs/**"/>
        <include name="LICENSE"/>
        <include name="README"/>
        <include name="CREDITS"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="dist-src" depends="jar">
    <tar destfile="${release.dir}/jvyamlb-src-${VERSION_NUMBER}${VERSION_ADDITION}.tar.gz" compression="gzip">
      <tarfileset dir="." prefix="jvyamlb-${VERSION_NUMBER}${VERSION_ADDITION}">
        <include name="lib/**"/>
        <exclude name="lib/build/**"/>
        <include name="docs/**"/>
        <include name="src/**"/>
        <include name="build.xml"/>
        <include name="LICENSE"/>
        <include name="README"/>
        <include name="CREDITS"/>
        <include name="default.build.properties"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="dist" depends="dist-bin,dist-src"/>

  <target name="clean" depends="prepare" description="clean almost everything">
    <delete dir="${build.dir}"/>
    <delete file="${lib.dir}/jvyamlb-${VERSION_NUMBER}${VERSION_ADDITION}.jar" quiet="true"/>
  </target>
</project>
